version: "3.8"

services:
  traefik:
    image: "traefik:v2.11"
    depends_on:
      - authelia
    command:
      - --log.level=INFO
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=traefik-public
      - --api
      - --api.dashboard=true
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      # update your email here
      - --certificatesresolvers.leresolver.acme.email=
      - --certificatesresolvers.leresolver.acme.storage=/le/acme.json
      - --certificatesresolvers.leresolver.acme.dnschallenge.provider=cloudflare
    environment:
      # update your email here
      - CLOUDFLARE_EMAIL=
      # update your api key here
      - CLOUDFLARE_API_KEY=
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik-public
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/mnt/data/traefik/acme.json:/le/acme.json"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.iamlearningdocker.store`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik.tls.certresolver=leresolver"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.middlewares=authelia"

        - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

        - "traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https%3A%2F%2Fauth.iamlearningdocker.store%2F"
        - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
        - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  authelia:
    image: authelia/authelia
    volumes:
      - /mnt/data/authelia:/config
    networks:
      - traefik-public
    secrets:
      - AUTHELIA_JWT_SECRETS
      - AUTHELIA_SESSION_SECRET
      - AUTHELIA_STORAGE_ENCRYPTION_KEY
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD
    environment:
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/AUTHELIA_JWT_SECRETS
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/AUTHELIA_SESSION_SECRET
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/run/secrets/AUTHELIA_STORAGE_ENCRYPTION_KEY
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.authelia.rule=Host(`auth.iamlearningdocker.store`)"
        - "traefik.http.services.authelia.loadbalancer.server.port=9091"
        - "traefik.http.routers.authelia.entrypoints=websecure"
        - "traefik.http.routers.authelia.tls=true"
        - "traefik.http.routers.authelia.tls.certresolver=leresolver"
      placement:
        constraints: [node.role == manager]

  backup:
    image: duplicati/duplicati:latest
    volumes:
      - "/mnt/data:/data"
      - "/var/lib/docker/swarm:/data/docker-swarm"
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backup.rule=Host(`backup.iamlearningdocker.store`)"
        - "traefik.http.services.backup.loadbalancer.server.port=8200"
        - "traefik.http.routers.backup.entrypoints=websecure"
        - "traefik.http.routers.backup.tls=true"
        - "traefik.http.routers.backup.tls.certresolver=leresolver"
        - "traefik.http.routers.backup.middlewares=authelia"
      placement:
        constraints: [node.role == manager]

  whoami-1fa:
    image: traefik/whoami:latest
    networks:
      - traefik-public
    command:
      - --port=8083
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami-1fa.rule=Host(`whoami-1fa.iamlearningdocker.store`)"
        - "traefik.http.services.whoami-1fa.loadbalancer.server.port=8083"
        - "traefik.http.routers.whoami-1fa.entrypoints=websecure"
        - "traefik.http.routers.whoami-1fa.tls=true"
        - "traefik.http.routers.whoami-1fa.tls.certresolver=leresolver"
        - "traefik.http.routers.whoami-1fa.middlewares=authelia"

  whoami-2fa:
    image: traefik/whoami:latest
    networks:
      - traefik-public
    command:
      - --port=8084
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami-2fa.rule=Host(`whoami-2fa.iamlearningdocker.store`)"
        - "traefik.http.services.whoami-2fa.loadbalancer.server.port=8084"
        - "traefik.http.routers.whoami-2fa.entrypoints=websecure"
        - "traefik.http.routers.whoami-2fa.tls=true"
        - "traefik.http.routers.whoami-2fa.tls.certresolver=leresolver"
        - "traefik.http.routers.whoami-2fa.middlewares=authelia"

  my-app:
    image: traefik/whoami:latest
    networks:
      - traefik-public
    command:
      - --port=8082
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.my-app.rule=Host(`whoami.iamlearningdocker.store`)"
        - "traefik.http.services.my-app.loadbalancer.server.port=8082"
        - "traefik.http.routers.my-app.entrypoints=websecure"
        - "traefik.http.routers.my-app.tls=true"
        - "traefik.http.routers.my-app.tls.certresolver=leresolver"
      mode: global
      placement:
        constraints: [node.platform.os == linux]

secrets:
  AUTHELIA_JWT_SECRETS:
    external: true
  AUTHELIA_SESSION_SECRET:
    external: true
  AUTHELIA_STORAGE_ENCRYPTION_KEY:
    external: true
  AUTHELIA_NOTIFIER_SMTP_PASSWORD:
    external: true

networks:
  traefik-public:
    external: true